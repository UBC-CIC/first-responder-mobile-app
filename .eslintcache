[{"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Layout.tsx":"1","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/PhysicianMain.tsx":"2","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/Alerts.tsx":"3","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/serviceWorkerRegistration.ts":"4","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Header.tsx":"5","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/firstresponder/FirstResponderMain.tsx":"6","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/Router.tsx":"7","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/Home.tsx":"8","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/PhysicianProfile.tsx":"9","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/reportWebVitals.ts":"10","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/Availability.tsx":"11","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/ContactInfo.tsx":"12","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/Call.tsx":"13","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/App.tsx":"14","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/index.tsx":"15","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/OnlineCall.tsx":"16","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/OfflineCall.tsx":"17","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/graphql/mutations.ts":"18","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/aws-exports.js":"19","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/RosterDisplay.tsx":"20","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/VideoGridDisplay.tsx":"21","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/graphql/queries.ts":"22"},{"size":886,"mtime":1612998617026,"results":"23","hashOfConfig":"24"},{"size":552,"mtime":1612998869218,"results":"25","hashOfConfig":"26"},{"size":192,"mtime":1612998923104,"results":"27","hashOfConfig":"26"},{"size":5256,"mtime":1612988457532,"results":"28","hashOfConfig":"24"},{"size":677,"mtime":1612998469571,"results":"29","hashOfConfig":"24"},{"size":488,"mtime":1612999813340,"results":"30","hashOfConfig":"26"},{"size":1747,"mtime":1613514221854,"results":"31","hashOfConfig":"24"},{"size":700,"mtime":1612996620033,"results":"32","hashOfConfig":"24"},{"size":567,"mtime":1612999483388,"results":"33","hashOfConfig":"26"},{"size":425,"mtime":1612987902051,"results":"34","hashOfConfig":"24"},{"size":1943,"mtime":1613066152639,"results":"35","hashOfConfig":"24"},{"size":193,"mtime":1612999413981,"results":"36","hashOfConfig":"26"},{"size":281,"mtime":1613066593363,"results":"37","hashOfConfig":"24"},{"size":351,"mtime":1613512216297,"results":"38","hashOfConfig":"24"},{"size":816,"mtime":1612988446494,"results":"39","hashOfConfig":"24"},{"size":4406,"mtime":1613592841937,"results":"40","hashOfConfig":"24"},{"size":213,"mtime":1613066621468,"results":"41","hashOfConfig":"24"},{"size":3902,"mtime":1613589602756,"results":"42","hashOfConfig":"24"},{"size":478,"mtime":1613589605640,"results":"43","hashOfConfig":"24"},{"size":2029,"mtime":1613593754274,"results":"44","hashOfConfig":"24"},{"size":718,"mtime":1613513860123,"results":"45","hashOfConfig":"24"},{"size":1780,"mtime":1613589602683,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pxq69c",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15fn7fk",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Layout.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/PhysicianMain.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/Alerts.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/serviceWorkerRegistration.ts",["98","99"],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Header.tsx",["100"],"import {\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport React, { ReactElement } from \"react\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nconst Header = ({ title }: { title?: string }): ReactElement => {\n  const history = useHistory();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={() => history.goBack()}\n        >\n          <ArrowBack />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/firstresponder/FirstResponderMain.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/Router.tsx",["101"],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/Home.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/PhysicianProfile.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/reportWebVitals.ts",["102"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/Availability.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/ContactInfo.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/Call.tsx",["103"],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/App.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/index.tsx",[],[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/OnlineCall.tsx",["104","105","106","107","108","109","110"],"import { GraphQLResult } from \"@aws-amplify/api\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  LocalVideo,\n  MicSelection,\n  SpeakerSelection,\n  useAudioVideo,\n  useLocalVideo,\n  useMeetingManager,\n  useRosterState,\n} from \"amazon-chime-sdk-component-library-react\";\nimport { AttendeeResponse } from \"amazon-chime-sdk-component-library-react/lib/providers/MeetingProvider/types\";\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\nimport React, { ReactElement, useEffect } from \"react\";\nimport {\n  CreateChimeMeetingMutation,\n  CreateMeetingMutation,\n  CreateMeetingMutationVariables,\n  GetAttendeeQuery,\n  GetAttendeeQueryVariables,\n  JoinChimeMeetingMutation,\n  JoinChimeMeetingMutationVariables,\n} from \"../../API\";\nimport config from \"../../aws-exports\";\nimport {\n  createChimeMeeting,\n  createMeeting,\n  joinChimeMeeting,\n} from \"../../graphql/mutations\";\nimport { getAttendee } from \"../../graphql/queries\";\nimport \"../../styles/VideoCall.css\";\nimport Layout from \"../styling/Layout\";\nimport RosterDisplay from \"./RosterDisplay\";\n\nAmplify.configure(config);\n\nconst OnlineCall = (): ReactElement => {\n  const { toggleVideo } = useLocalVideo();\n  const audioVideo = useAudioVideo();\n  const meetingManager = useMeetingManager();\n  const { roster } = useRosterState();\n\n  const fetchAttendee = (options: GetAttendeeQueryVariables) => {\n    return API.graphql(graphqlOperation(getAttendee, options)) as Promise<\n      GraphQLResult<GetAttendeeQuery>\n    >;\n  };\n  const joinMeeting = (options: JoinChimeMeetingMutationVariables) => {\n    return API.graphql(\n      graphqlOperation(joinChimeMeeting, options)\n    ) as GraphQLResult<JoinChimeMeetingMutation>;\n  };\n\n  /** On mount */\n  useEffect(() => {\n    handleCreateandJoinMeeting(\"theboys\", \"Trevor\");\n    meetingManager.getAttendee = async (chimeAttendeeId) => {\n      const res = await fetchAttendee({ id: chimeAttendeeId });\n      console.log(res);\n\n      if (res.errors) {\n        console.error(res.errors);\n      }\n      return Promise.resolve({ name: res.data?.getAttendee?.Name });\n    };\n  }, []);\n\n  /** On change of roster */\n  useEffect(() => {\n    const attendees = Object.values(roster);\n    console.log(attendees);\n  }, [roster]);\n\n  /** On change of audio/video when call starts */\n  useEffect(() => {\n    const f = async () => {\n      /** Get and Bind User Devices to Chime Infrastructure */\n      if (!audioVideo) return;\n      try {\n        const audioInputs: MediaDeviceInfo[] = await audioVideo.listAudioInputDevices();\n        const videoInputs: MediaDeviceInfo[] = await audioVideo.listVideoInputDevices();\n        await audioVideo.chooseVideoInputDevice(videoInputs[0].deviceId);\n        await audioVideo.chooseAudioInputDevice(audioInputs[0].deviceId);\n      } catch (err) {\n        // handle error - unable to acquire audio device perhaps due to permissions blocking\n      }\n      const audioOutputElement = document.getElementById(\"meeting-audio\");\n      // const videoOutputElement = document.getElementById(\"meeting-video\");\n\n      // await audioVideo.bindVideoElement(\n      //   0,\n      //   videoOutputElement as HTMLVideoElement\n      // );\n\n      // await audioVideo.bindAudioElement(audioOutputElement as HTMLAudioElement);\n\n      audioVideo.start();\n      toggleVideo();\n    };\n    if (audioVideo) f();\n  }, [audioVideo]);\n\n  const handleCreateandJoinMeeting = async (title: string, name: string) => {\n    /** Get Meeting data from Lambda call to DynamoDB */\n    const joinRes = await joinMeeting({ title, name });\n\n    const meetingInfo = joinRes.data?.joinChimeMeeting?.Meeting;\n    const attendeeInfo = { ...joinRes.data?.joinChimeMeeting?.Attendee, name };\n    console.log(meetingInfo, attendeeInfo);\n\n    await meetingManager.join({ meetingInfo, attendeeInfo });\n  };\n\n  return (\n    <Layout title=\"Online Call\">\n      <div\n        style={{\n          objectFit: \"contain\",\n          height: \"70%\",\n          minHeight: \"100px\",\n          maxHeight: \"300px\",\n        }}\n      >\n        <LocalVideo\n          css={\n            \"object-fit: contain; width: 100%; height: 100%; position: relative !important;  \"\n          }\n        />\n      </div>\n      <Button onClick={toggleVideo}>Toggle</Button>\n      <audio id=\"meeting-audio\" style={{ display: \"none\" }}></audio>\n      <MicSelection />\n      <SpeakerSelection />\n      <RosterDisplay />\n    </Layout>\n  );\n};\n\nexport default OnlineCall;\n","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/OfflineCall.tsx",[],[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/graphql/mutations.ts",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/aws-exports.js",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/RosterDisplay.tsx",["111","112","113","114","115"],"import {\n  Roster,\n  RosterGroup,\n  RosterHeader,\n  RosterCell,\n  useRosterState,\n  RosterAttendee,\n} from \"amazon-chime-sdk-component-library-react\";\nimport { ReactElement, useEffect } from \"react\";\n\n// const RosterDisplay = (): ReactElement => {\n//   const { roster } = useRosterState();\n//   useEffect(() => {\n//     console.log(\"From roster: \", roster);\n//   });\n//   return (\n//     <Roster>\n//       <RosterHeader\n//         title=\"Present\"\n//         badge={2}\n//         onClose={() => {\n//           return;\n//         }}\n//         searchValue=\"Michael\"\n//         onSearch={() => {\n//           return;\n//         }}\n//       />\n//       <RosterGroup>\n//         <RosterCell\n//           name=\"Michael Scott\"\n//           subtitle=\"Regional Manager\"\n//           muted={false}\n//           videoEnabled={true}\n//         />\n//         <RosterCell\n//           name=\"Michael Scarn\"\n//           subtitle=\"FBI agent\"\n//           muted={true}\n//           videoEnabled={false}\n//         />\n//       </RosterGroup>\n//       <RosterGroup title=\"Disconnected\" badge={2}>\n//         <RosterCell name=\"Dwight\" subtitle=\"Assistant regional manager\" />\n//         <RosterCell name=\"Mike the Magic\" subtitle=\"Magician\" />\n//       </RosterGroup>\n//     </Roster>\n//   );\n// };\n// export default RosterDisplay;\n\nconst RosterDisplay = () => {\n  const { roster } = useRosterState();\n  const attendees = Object.values(roster);\n\n  const attendeeItems = attendees.map((attendee) => {\n    const { chimeAttendeeId, name } = attendee;\n    return (\n      <RosterAttendee\n        subtitle=\"First Responder\"\n        muted={true}\n        key={chimeAttendeeId}\n        attendeeId={chimeAttendeeId}\n      />\n    );\n  });\n\n  return (\n    <Roster>\n      <RosterHeader\n        title=\"Present\"\n        badge={attendees.length}\n        onClose={() => {\n          return;\n        }}\n        onSearch={() => {\n          return;\n        }}\n      />\n      <RosterGroup>{attendeeItems}</RosterGroup>\n    </Roster>\n  );\n};\nexport default RosterDisplay;\n","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/VideoGridDisplay.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/graphql/queries.ts",[],{"ruleId":"116","severity":1,"message":"117","line":26,"column":8,"nodeType":"118","messageId":"119","endLine":26,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":132,"column":8,"nodeType":"118","messageId":"119","endLine":132,"endColumn":29},{"ruleId":"120","severity":1,"message":"121","line":6,"column":3,"nodeType":"122","messageId":"123","endLine":6,"endColumn":9},{"ruleId":"120","severity":1,"message":"124","line":12,"column":3,"nodeType":"122","messageId":"123","endLine":12,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":3,"column":25,"nodeType":"125","messageId":"119","endLine":3,"endColumn":57},{"ruleId":"120","severity":1,"message":"126","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"120","severity":1,"message":"127","line":12,"column":10,"nodeType":"122","messageId":"123","endLine":12,"endColumn":26},{"ruleId":"120","severity":1,"message":"128","line":16,"column":3,"nodeType":"122","messageId":"123","endLine":16,"endColumn":29},{"ruleId":"120","severity":1,"message":"129","line":17,"column":3,"nodeType":"122","messageId":"123","endLine":17,"endColumn":24},{"ruleId":"120","severity":1,"message":"130","line":18,"column":3,"nodeType":"122","messageId":"123","endLine":18,"endColumn":33},{"ruleId":"120","severity":1,"message":"131","line":26,"column":3,"nodeType":"122","messageId":"123","endLine":26,"endColumn":21},{"ruleId":"120","severity":1,"message":"132","line":27,"column":3,"nodeType":"122","messageId":"123","endLine":27,"endColumn":16},{"ruleId":"120","severity":1,"message":"133","line":87,"column":13,"nodeType":"122","messageId":"123","endLine":87,"endColumn":31},{"ruleId":"120","severity":1,"message":"134","line":5,"column":3,"nodeType":"122","messageId":"123","endLine":5,"endColumn":13},{"ruleId":"120","severity":1,"message":"135","line":9,"column":10,"nodeType":"122","messageId":"123","endLine":9,"endColumn":22},{"ruleId":"120","severity":1,"message":"136","line":9,"column":24,"nodeType":"122","messageId":"123","endLine":9,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":52,"column":23,"nodeType":"125","messageId":"119","endLine":52,"endColumn":28},{"ruleId":"120","severity":1,"message":"137","line":57,"column":30,"nodeType":"122","messageId":"123","endLine":57,"endColumn":34},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'RosterProvider' is defined but never used.","ArrowFunctionExpression","'Layout' is defined but never used.","'AttendeeResponse' is defined but never used.","'CreateChimeMeetingMutation' is defined but never used.","'CreateMeetingMutation' is defined but never used.","'CreateMeetingMutationVariables' is defined but never used.","'createChimeMeeting' is defined but never used.","'createMeeting' is defined but never used.","'audioOutputElement' is assigned a value but never used.","'RosterCell' is defined but never used.","'ReactElement' is defined but never used.","'useEffect' is defined but never used.","'name' is assigned a value but never used."]