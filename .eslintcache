[{"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Layout.tsx":"1","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/PhysicianMain.tsx":"2","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/Alerts.tsx":"3","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/serviceWorkerRegistration.ts":"4","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Header.tsx":"5","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/firstresponder/FirstResponderMain.tsx":"6","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/Router.tsx":"7","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/Home.tsx":"8","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/PhysicianProfile.tsx":"9","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/reportWebVitals.ts":"10","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/Availability.tsx":"11","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/ContactInfo.tsx":"12","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/Call.tsx":"13","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/App.tsx":"14","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/index.tsx":"15","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/OnlineCall.tsx":"16","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/OfflineCall.tsx":"17","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/graphql/mutations.ts":"18","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/aws-exports.js":"19","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/RosterDisplay.tsx":"20","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/VideoGridDisplay.tsx":"21","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/graphql/queries.ts":"22","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Colors.ts":"23"},{"size":995,"mtime":1613605500233,"results":"24","hashOfConfig":"25"},{"size":552,"mtime":1612998869218,"results":"26","hashOfConfig":"27"},{"size":192,"mtime":1612998923104,"results":"28","hashOfConfig":"27"},{"size":5256,"mtime":1612988457532,"results":"29","hashOfConfig":"25"},{"size":677,"mtime":1612998469571,"results":"30","hashOfConfig":"25"},{"size":488,"mtime":1612999813340,"results":"31","hashOfConfig":"27"},{"size":2954,"mtime":1613600802715,"results":"32","hashOfConfig":"25"},{"size":1635,"mtime":1613604313631,"results":"33","hashOfConfig":"25"},{"size":567,"mtime":1612999483388,"results":"34","hashOfConfig":"27"},{"size":425,"mtime":1612987902051,"results":"35","hashOfConfig":"25"},{"size":1943,"mtime":1613066152639,"results":"36","hashOfConfig":"25"},{"size":193,"mtime":1612999413981,"results":"37","hashOfConfig":"27"},{"size":281,"mtime":1613066593363,"results":"38","hashOfConfig":"25"},{"size":351,"mtime":1613512216297,"results":"39","hashOfConfig":"25"},{"size":816,"mtime":1612988446494,"results":"40","hashOfConfig":"25"},{"size":4162,"mtime":1613602084127,"results":"41","hashOfConfig":"25"},{"size":213,"mtime":1613066621468,"results":"42","hashOfConfig":"25"},{"size":3902,"mtime":1613599602161,"results":"43","hashOfConfig":"25"},{"size":734,"mtime":1613599604950,"results":"44","hashOfConfig":"25"},{"size":917,"mtime":1613601432449,"results":"45","hashOfConfig":"25"},{"size":718,"mtime":1613513860123,"results":"46","hashOfConfig":"25"},{"size":1780,"mtime":1613589602683,"results":"47","hashOfConfig":"25"},{"size":157,"mtime":1613601284929,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"pxq69c",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15fn7fk",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Layout.tsx",["102"],"import { ReactElement, ReactNode } from \"react\";\nimport Header from \"./Header\";\nimport { SwipeEventData, useSwipeable } from \"react-swipeable\";\nimport { useHistory } from \"react-router-dom\";\nimport Colors from \"./Colors\";\nconst Layout = ({\n  noHeader = false,\n  children,\n  title,\n}: {\n  noHeader?: boolean;\n  children?: ReactNode;\n  title?: string;\n}): ReactElement => {\n  const history = useHistory();\n  const handleSwipeRight = (eventData: SwipeEventData) => {\n    if (eventData.initial[0] <= 25) {\n      if (history.location.pathname !== \"/\") history.goBack();\n    }\n  };\n  const handlers = useSwipeable({\n    onSwipedRight: handleSwipeRight,\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: false,\n  });\n  return (\n    <div\n      {...handlers}\n      style={{\n        minHeight: \"100vh\",\n        // backgroundColor: Colors.theme.onyx\n      }}\n    >\n      {!noHeader && <Header title={title || history.location.pathname} />}\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/PhysicianMain.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/Alerts.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/serviceWorkerRegistration.ts",["103","104"],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Header.tsx",["105"],"import {\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport React, { ReactElement } from \"react\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nconst Header = ({ title }: { title?: string }): ReactElement => {\n  const history = useHistory();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={() => history.goBack()}\n        >\n          <ArrowBack />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/firstresponder/FirstResponderMain.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/Router.tsx",["106"],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/Home.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/PhysicianProfile.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/reportWebVitals.ts",["107"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/Availability.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/physician/ContactInfo.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/Call.tsx",["108"],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/App.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/index.tsx",[],[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/OnlineCall.tsx",["109"],"import { GraphQLResult } from \"@aws-amplify/api\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  LocalVideo,\n  MicSelection,\n  SpeakerSelection,\n  useAudioVideo,\n  useLocalVideo,\n  useMeetingManager,\n  useRosterState,\n} from \"amazon-chime-sdk-component-library-react\";\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\nimport React, { ReactElement, useEffect } from \"react\";\nimport {\n  GetAttendeeQuery,\n  GetAttendeeQueryVariables,\n  JoinChimeMeetingMutation,\n  JoinChimeMeetingMutationVariables,\n} from \"../../API\";\nimport config from \"../../aws-exports\";\nimport { joinChimeMeeting } from \"../../graphql/mutations\";\nimport { getAttendee } from \"../../graphql/queries\";\nimport \"../../styles/VideoCall.css\";\nimport Layout from \"../styling/Layout\";\nimport RosterDisplay from \"./RosterDisplay\";\n\nAmplify.configure(config);\n\nconst OnlineCall = (): ReactElement => {\n  const { toggleVideo } = useLocalVideo();\n  const audioVideo = useAudioVideo();\n  const meetingManager = useMeetingManager();\n  const { roster } = useRosterState();\n\n  const fetchAttendee = (options: GetAttendeeQueryVariables) => {\n    return API.graphql(graphqlOperation(getAttendee, options)) as Promise<\n      GraphQLResult<GetAttendeeQuery>\n    >;\n  };\n  const joinMeeting = (options: JoinChimeMeetingMutationVariables) => {\n    return API.graphql(\n      graphqlOperation(joinChimeMeeting, options)\n    ) as GraphQLResult<JoinChimeMeetingMutation>;\n  };\n\n  /** On mount */\n  useEffect(() => {\n    handleCreateandJoinMeeting(\"theboys\", \"Trevor\");\n    meetingManager.getAttendee = async (chimeAttendeeId) => {\n      const res = await fetchAttendee({ id: chimeAttendeeId });\n      console.log(res);\n\n      if (res.errors) {\n        console.error(res.errors);\n      }\n      return Promise.resolve({ name: res.data?.getAttendee?.Name });\n    };\n  }, []);\n\n  /** On change of roster */\n  useEffect(() => {\n    const attendees = Object.values(roster);\n    console.log(attendees);\n  }, [roster]);\n\n  /** On change of audio/video when call starts */\n  useEffect(() => {\n    const f = async () => {\n      /** Get and Bind User Devices to Chime Infrastructure */\n      if (!audioVideo) return;\n      try {\n        const audioInputs: MediaDeviceInfo[] = await audioVideo.listAudioInputDevices();\n        const videoInputs: MediaDeviceInfo[] = await audioVideo.listVideoInputDevices();\n        await audioVideo.chooseVideoInputDevice(videoInputs[0].deviceId);\n        await audioVideo.chooseAudioInputDevice(audioInputs[0].deviceId);\n      } catch (err) {\n        // handle error - unable to acquire audio device perhaps due to permissions blocking\n      }\n      const audioOutputElement = document.getElementById(\"meeting-audio\");\n      // const videoOutputElement = document.getElementById(\"meeting-video\");\n\n      // await audioVideo.bindVideoElement(\n      //   0,\n      //   videoOutputElement as HTMLVideoElement\n      // );\n\n      // await audioVideo.bindAudioElement(audioOutputElement as HTMLAudioElement);\n\n      audioVideo.start();\n      toggleVideo();\n    };\n    if (audioVideo) f();\n  }, [audioVideo]);\n\n  const handleCreateandJoinMeeting = async (title: string, name: string) => {\n    /** Get Meeting data from Lambda call to DynamoDB */\n    const joinRes = await joinMeeting({ title, name });\n\n    const meetingInfo = joinRes.data?.joinChimeMeeting?.Meeting;\n    const attendeeInfo = { ...joinRes.data?.joinChimeMeeting?.Attendee, name };\n    console.log(meetingInfo, attendeeInfo);\n\n    await meetingManager.join({ meetingInfo, attendeeInfo });\n  };\n\n  return (\n    <Layout title=\"Online Call\">\n      <div\n        style={{\n          objectFit: \"contain\",\n          height: \"70%\",\n          minHeight: \"100px\",\n          maxHeight: \"300px\",\n        }}\n      >\n        <LocalVideo\n          css={\n            \"object-fit: contain; width: 100%; height: 100%; position: relative !important;  \"\n          }\n        />\n      </div>\n      <Button onClick={toggleVideo}>Toggle</Button>\n      <audio id=\"meeting-audio\" style={{ display: \"none\" }}></audio>\n      <MicSelection />\n      <SpeakerSelection />\n      <RosterDisplay />\n    </Layout>\n  );\n};\n\nexport default OnlineCall;\n","/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/OfflineCall.tsx",[],[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/graphql/mutations.ts",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/aws-exports.js",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/RosterDisplay.tsx",["110","111","112","113","114"],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/shared/VideoGridDisplay.tsx",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/graphql/queries.ts",[],"/Users/trevorflanigan/Desktop/Projects/STARS/stars-pwa/src/components/styling/Colors.ts",[],{"ruleId":"115","severity":1,"message":"116","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":26,"column":8,"nodeType":"121","messageId":"122","endLine":26,"endColumn":42},{"ruleId":"119","severity":1,"message":"120","line":132,"column":8,"nodeType":"121","messageId":"122","endLine":132,"endColumn":29},{"ruleId":"115","severity":1,"message":"123","line":6,"column":3,"nodeType":"117","messageId":"118","endLine":6,"endColumn":9},{"ruleId":"115","severity":1,"message":"124","line":22,"column":3,"nodeType":"117","messageId":"118","endLine":22,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":3,"column":25,"nodeType":"125","messageId":"122","endLine":3,"endColumn":57},{"ruleId":"115","severity":1,"message":"126","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"127","line":79,"column":13,"nodeType":"117","messageId":"118","endLine":79,"endColumn":31},{"ruleId":"115","severity":1,"message":"128","line":5,"column":3,"nodeType":"117","messageId":"118","endLine":5,"endColumn":13},{"ruleId":"115","severity":1,"message":"129","line":9,"column":10,"nodeType":"117","messageId":"118","endLine":9,"endColumn":22},{"ruleId":"115","severity":1,"message":"130","line":9,"column":24,"nodeType":"117","messageId":"118","endLine":9,"endColumn":33},{"ruleId":"119","severity":1,"message":"120","line":11,"column":23,"nodeType":"125","messageId":"122","endLine":11,"endColumn":28},{"ruleId":"115","severity":1,"message":"131","line":16,"column":30,"nodeType":"117","messageId":"118","endLine":16,"endColumn":34},"@typescript-eslint/no-unused-vars","'Colors' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'Button' is defined but never used.","'RosterProvider' is defined but never used.","ArrowFunctionExpression","'Layout' is defined but never used.","'audioOutputElement' is assigned a value but never used.","'RosterCell' is defined but never used.","'ReactElement' is defined but never used.","'useEffect' is defined but never used.","'name' is assigned a value but never used."]