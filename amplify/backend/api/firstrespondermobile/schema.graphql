# Models
type Meeting @model @aws_api_key {
  id: ID!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Attendee @aws_api_key @model(timestamps: null) {
  id: ID!
  name: String!
  externalUserId: String
  meetingID: ID!
  role: String!
}

type PhysicianProfile
  @model
  @aws_cognito_user_pools
  @auth(rules: [{ allow: owner }]) {
  id: ID!
  FirstName: String!
  LastName: String!
  Organization: String
  Occupation: String
} 

type FirstResponderProfile @model @aws_api_key {
  id: ID!
  phoneNumber: String
  FirstName: String
  LastName: String
  Occupation: String
}

type UserProfile {
  email: String!
  user_status: String
  first_name: String
  last_name: String
  phone_number: String
  user_role: String
  organization: String
  profile_picture: String
  notes: String
  is_paged: Boolean
  availability: String
  created_date_time: String
  updated_date_time: String
}

# Private Types

type JoinInfo {
  id: String!
  Meeting: MeetingData!
  Attendee: AttendeeInfo
}

type AttendeeInfo {
  ExternalUserId: String
  AttendeeId: String
  JoinToken: String
}

type MeetingData {
  MeetingId: String!
  ExternalMeetingId: String
  MediaPlacement: MediaPlacement!
  MediaRegion: String!
}

type MediaPlacement {
  AudioHostUrl: String!
  AudioFallbackUrl: String!
  ScreenDataUrl: String!
  ScreenSharingUrl: String!
  ScreenViewingUrl: String!
  SignalingUrl: String!
  TurnControlUrl: String!
}

# Resolvers

type Mutation {
  joinChimeMeeting(
    title: String
    name: String
    region: String
    role: String
    externalAttendeeId: String
    phoneNumber: String
  ): JoinInfo @function(name: "firstresponderjoinmeeting-${env}")
  confirmPhoneNumber(
    secretCode: String
    phoneNumber: String
  ): String @function(name: "confirmphonenumber-${env}")
}
