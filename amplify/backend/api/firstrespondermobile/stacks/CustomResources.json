{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "An auto-generated nested stack.",
  "Metadata": {},
  "Parameters": {
    "AppSyncApiId": {
      "Type": "String",
      "Description": "The id of the AppSync API associated with this project."
    },
    "AppSyncApiName": {
      "Type": "String",
      "Description": "The name of the AppSync API",
      "Default": "AppSyncSimpleTransform"
    },
    "env": {
      "Type": "String",
      "Description": "The environment name. e.g. Dev, Test, or Production",
      "Default": "NONE"
    },
    "S3DeploymentBucket": {
      "Type": "String",
      "Description": "The S3 bucket containing all deployment assets for the project."
    },
    "S3DeploymentRootKey": {
      "Type": "String",
      "Description": "An S3 key relative to the S3DeploymentBucket that points to the root\nof the deployment directory."
    },
    "AuthRoleName": {
      "Type": "String",
      "Default": "AuthRoleName"
    }
  },
  "Resources": {
    "AppSyncIdParameter": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/firstresponder/apiid",
        "Type": "String",
        "Value": {
          "Ref": "AppSyncApiId"
        },
        "Description": "GraphQL Api ID for Amplify App"
      }
    },
    "FirstResponderProfileDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "AppSyncApiId"
        },
        "Description": "Appsync Datasource for FirstResponderProfile",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": "first-responder-profile"
        },
        "Name": "FirstResponderProfile",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "DataSourceRole",
            "Arn"
          ]
        },
        "Type": "AMAZON_DYNAMODB"
      }
    },
    "SpecialistProfileDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "AppSyncApiId"
        },
        "Description": "Appsync Datasource for SpecialistProfile",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": "specialist-profile"
        },
        "Name": "SpecialistProfile",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "DataSourceRole",
            "Arn"
          ]
        },
        "Type": "AMAZON_DYNAMODB"
      }
    },
    "MeetingDataDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "AppSyncApiId"
        },
        "Description": "Appsync Datasource for MeetingData",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": "meeting-data"
        },
        "Name": "MeetingData",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "DataSourceRole",
            "Arn"
          ]
        },
        "Type": "AMAZON_DYNAMODB"
      }
    },
    "MeetingDetailDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "AppSyncApiId"
        },
        "Description": "Appsync Datasource for MeetingDetail",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": "meeting-detail"
        },
        "Name": "MeetingDetail",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "DataSourceRole",
            "Arn"
          ]
        },
        "Type": "AMAZON_DYNAMODB"
      }
    },
    "DataSourceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Description": "Role for AppSync DataSources",
        "RoleName": "FirstResponderDataSourceDDBRole"
      }
    },
    "DataSourcePolicy": {
      "Type": "AWS::IAM::Policy",
      "DependsOn": [
        "DataSourceRole"
      ],
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:UpdateItem"
              ],
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "FirstResponderDataSourceDDBPolicy",
        "Roles": [
          {
            "Ref": "DataSourceRole"
          }
        ]
      }
    },
    "FirstResponderDataSourceResolverQuery": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "FirstResponderProfileDataSource", 
      "Properties" : {
          "ApiId" : {"Ref": "AppSyncApiId"},
          "DataSourceName" : "FirstResponderProfile",
          "FieldName" : "getFirstResponderProfile",
          "RequestMappingTemplate" : "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"phone_number\" : $util.dynamodb.toDynamoDBJson($ctx.args.phone_number)\n    }\n}\n",
          "ResponseMappingTemplate" : "$utils.toJson($ctx.result)",
          "TypeName" : "Query"
        }
    },
    "FirstResponderDataSourceResolverQueryAll": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "FirstResponderProfileDataSource", 
      "Properties" : {
          "ApiId" : {"Ref": "AppSyncApiId"},
          "DataSourceName" : "FirstResponderProfile",
          "FieldName" : "listFirstResponderProfiles",
          "TypeName" : "Query",
          "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"Scan\",\n    #if( $ctx.args.count )\n        \"limit\": $ctx.args.count,\n    #end\n    #if( ${ctx.args.nextToken} )\n        \"nextToken\": \"${ctx.args.nextToken}\"\n    #end\n}\n",
          "ResponseMappingTemplate": "{\n    \"items\": $utils.toJson($ctx.result.items),\n    #if( ${ctx.result.nextToken} )\n        \"nextToken\": \"${ctx.result.nextToken}\",\n    #end\n}\n"
        }
    },
    "FirstResponderDataSourceResolverMutationCreate": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "FirstResponderProfileDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "FirstResponderProfile",
        "FieldName" : "createFirstResponderProfile",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"PutItem\",\n    \"key\" : {\n        \"phone_number\" : $util.dynamodb.toStringJson($ctx.args.input.phone_number)\n    },\n    \"attributeValues\" : $util.dynamodb.toMapValuesJson($ctx.args.input),\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "FirstResponderDataSourceResolverMutationDelete": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "FirstResponderProfileDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "FirstResponderProfile",
        "FieldName" : "deleteFirstResponderProfile",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"DeleteItem\",\n    \"key\" : {\n        \"phone_number\" : { \"S\" : \"${ctx.args.input.phone_number}\" }\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "FirstResponderDataSourceResolverMutationUpdate": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "FirstResponderProfileDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "FirstResponderProfile",
        "FieldName" : "updateFirstResponderProfile",
        "RequestMappingTemplate": "#set( $expNames  = {} )\n#set( $expValues = {} )\n#set( $expSet = {} )\n#set( $expAdd = {} )\n#set( $expRemove = [] )\n\n#foreach( $entry in $context.arguments.input.entrySet() )\n    #if( $entry.key != \"phone_number\" )\n        #if( (!$entry.value) && (\"$!{entry.value}\" == \"\") )\n\n            #set( $discard = ${expRemove.add(\"#${entry.key}\")} )\n            $!{expNames.put(\"#${entry.key}\", \"$entry.key\")}\n        #else\n\n            $!{expSet.put(\"#${entry.key}\", \":${entry.key}\")}\n            $!{expNames.put(\"#${entry.key}\", \"$entry.key\")}\n\n            #if( $entry.key == \"ups\" || $entry.key == \"downs\" )\n                $!{expValues.put(\":${entry.key}\", { \"N\" : $entry.value })}\n            #else\n                $!{expValues.put(\":${entry.key}\", { \"S\" : \"${entry.value}\" })}\n            #end\n        #end\n    #end\n#end\n\n#set( $expression = \"\" )\n#if( !${expSet.isEmpty()} )\n    #set( $expression = \"SET\" )\n    #foreach( $entry in $expSet.entrySet() )\n        #set( $expression = \"${expression} ${entry.key} = ${entry.value}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n\n#if( !${expAdd.isEmpty()} )\n    #set( $expression = \"${expression} ADD\" )\n    #foreach( $entry in $expAdd.entrySet() )\n        #set( $expression = \"${expression} ${entry.key} ${entry.value}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n\n#if( !${expRemove.isEmpty()} )\n    #set( $expression = \"${expression} REMOVE\" )\n\n    #foreach( $entry in $expRemove )\n        #set( $expression = \"${expression} ${entry}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n{\n    \"version\" : \"2017-02-28\",\n\n    \"operation\" : \"UpdateItem\",\n\n    \"key\" : {\n        \"phone_number\" : $util.dynamodb.toDynamoDBJson($ctx.args.input.phone_number)\n    },\n    \"update\" : {\n        \"expression\" : \"${expression}\"\n        #if( !${expNames.isEmpty()} )\n            ,\"expressionNames\" : $utils.toJson($expNames)\n        #end\n        #if( !${expValues.isEmpty()} )\n            ,\"expressionValues\" : $utils.toJson($expValues)\n        #end\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "MeetingDataDataSourceResolverQuery": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDataDataSource", 
      "Properties" : {
          "ApiId" : {"Ref": "AppSyncApiId"},
          "DataSourceName" : "MeetingData",
          "FieldName" : "getMeeting",
          "RequestMappingTemplate" : "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"id\" : $util.dynamodb.toDynamoDBJson($ctx.args.id)\n    }\n}\n",
          "ResponseMappingTemplate" : "$utils.toJson($ctx.result)",
          "TypeName" : "Query"
        }
    },
    "MeetingDataDataSourceResolverQueryAll": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDataDataSource", 
      "Properties" : {
          "ApiId" : {"Ref": "AppSyncApiId"},
          "DataSourceName" : "MeetingData",
          "FieldName" : "listMeetings",
          "TypeName" : "Query",
          "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"Scan\",\n    #if( $ctx.args.count )\n        \"limit\": $ctx.args.count,\n    #end\n    #if( ${ctx.args.nextToken} )\n        \"nextToken\": \"${ctx.args.nextToken}\"\n    #end\n}\n",
          "ResponseMappingTemplate": "{\n    \"items\": $utils.toJson($ctx.result.items),\n    #if( ${ctx.result.nextToken} )\n        \"nextToken\": \"${ctx.result.nextToken}\",\n    #end\n}\n"
        }
    },
    "MeetingDataDataSourceResolverMutationCreate": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDataDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "MeetingData",
        "FieldName" : "createMeeting",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"PutItem\",\n    \"key\" : {\n        \"id\" : $util.dynamodb.toStringJson($ctx.args.input.id)\n    },\n    \"attributeValues\" : $util.dynamodb.toMapValuesJson($ctx.args.input),\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "MeetingDataDataSourceResolverMutationDelete": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDataDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "MeetingData",
        "FieldName" : "deleteMeeting",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"DeleteItem\",\n    \"key\" : {\n        \"id\" : { \"S\" : \"${ctx.args.input.id}\" }\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "MeetingDataDataSourceResolverMutationUpdate": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDetailDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "MeetingData",
        "FieldName" : "updateMeeting",
        "RequestMappingTemplate": "#set( $expNames  = {} )\n#set( $expValues = {} )\n#set( $expSet = {} )\n#set( $expAdd = {} )\n#set( $expRemove = [] )\n\n#foreach( $entry in $context.arguments.input.entrySet() )\n    #if( $entry.key != \"id\" )\n        #if( (!$entry.value) && (\"$!{entry.value}\" == \"\") )\n\n            #set( $discard = ${expRemove.add(\"#${entry.key}\")} )\n            $!{expNames.put(\"#${entry.key}\", \"$entry.key\")}\n        #else\n\n            $!{expSet.put(\"#${entry.key}\", \":${entry.key}\")}\n            $!{expNames.put(\"#${entry.key}\", \"$entry.key\")}\n\n            #if( $entry.key == \"ups\" || $entry.key == \"downs\" )\n                $!{expValues.put(\":${entry.key}\", { \"N\" : $entry.value })}\n            #else\n                $!{expValues.put(\":${entry.key}\", { \"S\" : \"${entry.value}\" })}\n            #end\n        #end\n    #end\n#end\n\n#set( $expression = \"\" )\n#if( !${expSet.isEmpty()} )\n    #set( $expression = \"SET\" )\n    #foreach( $entry in $expSet.entrySet() )\n        #set( $expression = \"${expression} ${entry.key} = ${entry.value}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n\n#if( !${expAdd.isEmpty()} )\n    #set( $expression = \"${expression} ADD\" )\n    #foreach( $entry in $expAdd.entrySet() )\n        #set( $expression = \"${expression} ${entry.key} ${entry.value}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n\n#if( !${expRemove.isEmpty()} )\n    #set( $expression = \"${expression} REMOVE\" )\n\n    #foreach( $entry in $expRemove )\n        #set( $expression = \"${expression} ${entry}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n{\n    \"version\" : \"2017-02-28\",\n\n    \"operation\" : \"UpdateItem\",\n\n    \"key\" : {\n        \"id\" : $util.dynamodb.toDynamoDBJson($ctx.args.input.id)\n    },\n    \"update\" : {\n        \"expression\" : \"${expression}\"\n        #if( !${expNames.isEmpty()} )\n            ,\"expressionNames\" : $utils.toJson($expNames)\n        #end\n        #if( !${expValues.isEmpty()} )\n            ,\"expressionValues\" : $utils.toJson($expValues)\n        #end\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "MeetingDetailDataSourceResolverQuery": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDetailDataSource", 
      "Properties" : {
          "ApiId" : {"Ref": "AppSyncApiId"},
          "DataSourceName" : "MeetingDetail",
          "FieldName" : "getMeetingDetail",
          "RequestMappingTemplate" : "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"meeting_id\" : $util.dynamodb.toDynamoDBJson($ctx.args.meeting_id)\n    }\n}\n",
          "ResponseMappingTemplate" : "$utils.toJson($ctx.result)",
          "TypeName" : "Query"
        }
    },
    "MeetingDetailDataSourceResolverQueryAll": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDetailDataSource", 
      "Properties" : {
          "ApiId" : {"Ref": "AppSyncApiId"},
          "DataSourceName" : "MeetingDetail",
          "FieldName" : "listMeetingDetails",
          "TypeName" : "Query",
          "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"Scan\",\n    #if( $ctx.args.count )\n        \"limit\": $ctx.args.count,\n    #end\n    #if( ${ctx.args.nextToken} )\n        \"nextToken\": \"${ctx.args.nextToken}\"\n    #end\n}\n",
          "ResponseMappingTemplate": "{\n    \"items\": $utils.toJson($ctx.result.items),\n    #if( ${ctx.result.nextToken} )\n        \"nextToken\": \"${ctx.result.nextToken}\",\n    #end\n}\n"
        }
    },
    "MeetingDetailDataSourceResolverMutationCreate": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDetailDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "MeetingDetail",
        "FieldName" : "createMeetingDetail",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"PutItem\",\n    \"key\" : {\n        \"meeting_id\" : $util.dynamodb.toStringJson($ctx.args.input.meeting_id)\n    },\n    \"attributeValues\" : $util.dynamodb.toMapValuesJson($ctx.args.input),\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "MeetingDetailDataSourceResolverMutationDelete": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDetailDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "MeetingDetail",
        "FieldName" : "deleteMeetingDetail",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"DeleteItem\",\n    \"key\" : {\n        \"meeting_id\" : { \"S\" : \"${ctx.args.input.meeting_id}\" }\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "MeetingDetailDataSourceResolverMutationUpdate": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "MeetingDetailDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "MeetingDetail",
        "FieldName" : "updateMeetingDetail",
        "RequestMappingTemplate": "#set( $expNames  = {} )\n#set( $expValues = {} )\n#set( $expSet = {} )\n#set( $expAdd = {} )\n#set( $expRemove = [] )\n\n#foreach( $entry in $context.arguments.input.entrySet() )\n    #if( $entry.key != \"meeting_id\" )\n        #if( (!$entry.value) && (\"$!{entry.value}\" == \"\") )\n\n            #set( $discard = ${expRemove.add(\"#${entry.key}\")} )\n            $!{expNames.put(\"#${entry.key}\", \"$entry.key\")}\n        #else\n\n            $!{expSet.put(\"#${entry.key}\", \":${entry.key}\")}\n            $!{expNames.put(\"#${entry.key}\", \"$entry.key\")}\n\n            #if( $entry.key == \"ups\" || $entry.key == \"downs\" )\n                $!{expValues.put(\":${entry.key}\", { \"N\" : $entry.value })}\n            #else\n                $!{expValues.put(\":${entry.key}\", { \"S\" : \"${entry.value}\" })}\n            #end\n        #end\n    #end\n#end\n\n#set( $expression = \"\" )\n#if( !${expSet.isEmpty()} )\n    #set( $expression = \"SET\" )\n    #foreach( $entry in $expSet.entrySet() )\n        #set( $expression = \"${expression} ${entry.key} = ${entry.value}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n\n#if( !${expAdd.isEmpty()} )\n    #set( $expression = \"${expression} ADD\" )\n    #foreach( $entry in $expAdd.entrySet() )\n        #set( $expression = \"${expression} ${entry.key} ${entry.value}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n\n#if( !${expRemove.isEmpty()} )\n    #set( $expression = \"${expression} REMOVE\" )\n\n    #foreach( $entry in $expRemove )\n        #set( $expression = \"${expression} ${entry}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n{\n    \"version\" : \"2017-02-28\",\n\n    \"operation\" : \"UpdateItem\",\n\n    \"key\" : {\n        \"meeting_id\" : $util.dynamodb.toDynamoDBJson($ctx.args.input.meeting_id)\n    },\n    \"update\" : {\n        \"expression\" : \"${expression}\"\n        #if( !${expNames.isEmpty()} )\n            ,\"expressionNames\" : $utils.toJson($expNames)\n        #end\n        #if( !${expValues.isEmpty()} )\n            ,\"expressionValues\" : $utils.toJson($expValues)\n        #end\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "SpecialistProfileDataSourceResolverQuery": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "SpecialistProfileDataSource", 
      "Properties" : {
          "ApiId" : {"Ref": "AppSyncApiId"},
          "DataSourceName" : "SpecialistProfile",
          "FieldName" : "getSpecialistProfile",
          "RequestMappingTemplate" : "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"phone_number\" : $util.dynamodb.toDynamoDBJson($ctx.args.phone_number)\n    }\n}\n",
          "ResponseMappingTemplate" : "$utils.toJson($ctx.result)",
          "TypeName" : "Query"
        }
    },
    "SpecialistProfileDataSourceResolverQueryAll": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "SpecialistProfileDataSource", 
      "Properties" : {
          "ApiId" : {"Ref": "AppSyncApiId"},
          "DataSourceName" : "SpecialistProfile",
          "FieldName" : "listSpecialistProfiles",
          "TypeName" : "Query",
          "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"Scan\",\n    #if( $ctx.args.count )\n        \"limit\": $ctx.args.count,\n    #end\n    #if( ${ctx.args.nextToken} )\n        \"nextToken\": \"${ctx.args.nextToken}\"\n    #end\n}\n",
          "ResponseMappingTemplate": "{\n    \"items\": $utils.toJson($ctx.result.items),\n    #if( ${ctx.result.nextToken} )\n        \"nextToken\": \"${ctx.result.nextToken}\",\n    #end\n}\n"
        }
    },
    "SpecialistProfileDataSourceResolverMutationCreate": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "SpecialistProfileDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "SpecialistProfile",
        "FieldName" : "createSpecialistProfile",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"PutItem\",\n    \"key\" : {\n        \"phone_number\" : $util.dynamodb.toStringJson($ctx.args.input.phone_number)\n    },\n    \"attributeValues\" : $util.dynamodb.toMapValuesJson($ctx.args.input),\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "SpecialistProfileDataSourceResolverMutationDelete": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "SpecialistProfileDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "SpecialistProfile",
        "FieldName" : "deleteSpecialistProfile",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"DeleteItem\",\n    \"key\" : {\n        \"phone_number\" : { \"S\" : \"${ctx.args.input.phone_number}\" }\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    },
    "SpecialistProfileDataSourceResolverMutationUpdate": {
      "Type" : "AWS::AppSync::Resolver",
      "DependsOn": "SpecialistProfileDataSource", 
      "Properties" : {
        "ApiId" : {"Ref": "AppSyncApiId"},
        "TypeName" : "Mutation",
        "DataSourceName" : "SpecialistProfile",
        "FieldName" : "updateSpecialistProfile",
        "RequestMappingTemplate": "#set( $expNames  = {} )\n#set( $expValues = {} )\n#set( $expSet = {} )\n#set( $expAdd = {} )\n#set( $expRemove = [] )\n\n#foreach( $entry in $context.arguments.input.entrySet() )\n    #if( $entry.key != \"phone_number\" )\n        #if( (!$entry.value) && (\"$!{entry.value}\" == \"\") )\n\n            #set( $discard = ${expRemove.add(\"#${entry.key}\")} )\n            $!{expNames.put(\"#${entry.key}\", \"$entry.key\")}\n        #else\n\n            $!{expSet.put(\"#${entry.key}\", \":${entry.key}\")}\n            $!{expNames.put(\"#${entry.key}\", \"$entry.key\")}\n\n            #if( $entry.key == \"ups\" || $entry.key == \"downs\" )\n                $!{expValues.put(\":${entry.key}\", { \"N\" : $entry.value })}\n            #else\n                $!{expValues.put(\":${entry.key}\", { \"S\" : \"${entry.value}\" })}\n            #end\n        #end\n    #end\n#end\n\n#set( $expression = \"\" )\n#if( !${expSet.isEmpty()} )\n    #set( $expression = \"SET\" )\n    #foreach( $entry in $expSet.entrySet() )\n        #set( $expression = \"${expression} ${entry.key} = ${entry.value}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n\n#if( !${expAdd.isEmpty()} )\n    #set( $expression = \"${expression} ADD\" )\n    #foreach( $entry in $expAdd.entrySet() )\n        #set( $expression = \"${expression} ${entry.key} ${entry.value}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n\n#if( !${expRemove.isEmpty()} )\n    #set( $expression = \"${expression} REMOVE\" )\n\n    #foreach( $entry in $expRemove )\n        #set( $expression = \"${expression} ${entry}\" )\n        #if ( $foreach.hasNext )\n            #set( $expression = \"${expression},\" )\n        #end\n    #end\n#end\n{\n    \"version\" : \"2017-02-28\",\n\n    \"operation\" : \"UpdateItem\",\n\n    \"key\" : {\n        \"phone_number\" : $util.dynamodb.toDynamoDBJson($ctx.args.input.phone_number)\n    },\n    \"update\" : {\n        \"expression\" : \"${expression}\"\n        #if( !${expNames.isEmpty()} )\n            ,\"expressionNames\" : $utils.toJson($expNames)\n        #end\n        #if( !${expValues.isEmpty()} )\n            ,\"expressionValues\" : $utils.toJson($expValues)\n        #end\n    }\n}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      }
    }
    
  },
  "Conditions": {
    "HasEnvironmentParameter": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "env"
            },
            "NONE"
          ]
        }
      ]
    },
    "AlwaysFalse": {
      "Fn::Equals": [
        "true",
        "false"
      ]
    }
  },
  "Outputs": {
    "AppSyncApiId": {
      "Description": "The id of the AppSync API associated with this project.",
      "Value": {
        "Ref": "AppSyncApiId"
      }
    },
    "EmptyOutput": {
      "Description": "An empty output. You may delete this if you have at least one resource above.",
      "Value": ""
    }
  }
}